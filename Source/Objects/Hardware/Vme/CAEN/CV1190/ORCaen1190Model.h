//--------------------------------------------------------
// ORCaen1190Model
// Created by Mark  A. Howe on Mon May 19 2008
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2008 CENPA, University of Washington. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of 
//Washington at the Center for Experimental Nuclear Physics and 
//Astrophysics (CENPA) sponsored in part by the United States 
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020. 
//The University has certain rights in the program pursuant to 
//the contract and the program should not be copied or distributed 
//outside your organization.  The DOE and the University of 
//Washington reserve all rights in the program. Neither the authors,
//University of Washington, or U.S. Government make any warranty, 
//express or implied, or assume any liability or responsibility 
//for the use of this software.
//-------------------------------------------------------------

#import "ORCaenCardModel.h"
#import "ORDataTaker.h"
#import "ORHWWizard.h"

@class ORRateGroup;
@class ORTimer;

// Declaration of constants for module.
enum {
    kOutputBuffer,		// 0000 - 0
    kControlRegister,	// 1000 - 1
    kStatusRegister,	// 1002 - 2
    kInterrupLevel,		// 100A - 3
    kInterrupVector,	// 100C - 4
    kGeoAddress,		// 100E - 5
    kMCSTAddress,		// 1010 - 6
    kMCSTControl,		// 1012 - 7
    kModuleReset,		// 1014 - 8
    kSoftwareClr,		// 1016 - 9
    kSoftwareEventReset,// 1018 - 10
    kSoftwareTrigger,	// 101A - 11
    kEventCounter,		// 101C - 12
    kEventStored,		// 1020 - 13
    kAllMostFull,		// 1022 - 14
    kBLTEventNumber,	// 1024 - 15
    kFirmwareRevision,	// 1026 - 16
    kTestReg,			// 1028 - 17
    kOutputProgControl,	// 102C - 18
	kMicro,				// 102E - 19
	kMicroHandShake,	// 1030 - 20
	kEventFIFO,			// 1038 - 21
	kEventFIFOStored,	// 103C - 22
	kEventFIFOStatus,	// 103E - 23
    kDummy32,			// 1200 - 24
    kDummy16,			// 1204 - 25
    kNumRegisters
};

// Size of output buffer
#define kADCOutputBufferSize 0x0FFC

// Class definition
@interface ORCaen1190Model : ORCaenCardModel <ORDataTaker,ORHWWizard,ORHWRamping>
{
	ORTimer*		aTimer;
	uint32_t	enabledMask[4];
    int				paramGroup;
    int				acqMode;
    int				windowWidth;
    int				windowOffset;
    int				searchMargin;
    int				rejectMargin;
    int				enableTrigTimeSub;
    int				edgeDetection;
    int				leadingTrailingLSB;
    int				leadingTimeResolution;
    int				leadingWidthResolution;
    int				deadTime;
	uint32_t 	tdcCount[128];
	ORRateGroup*	tdcRateGroup;
	BOOL			isRunning;
	uint32_t   locationWord;
}

#pragma mark ***Accessors
- (void) setIntegrationTime:(double)newIntegrationTime;
- (ORRateGroup*)    tdcRateGroup;
- (void) setTdcRateGroup:(ORRateGroup*)newTdcRateGroup;
- (int)  deadTime;
- (void) setDeadTime:(int) aDeadTime;
- (int)  leadingWidthResolution;
- (void) setLeadingWidthResolution:(int) aLeadingWidthResolution;
- (int)  leadingTimeResolution;
- (void) setLeadingTimeResolution:(int) aLeadingTimeResolution;
- (int)  leadingTrailingLSB;
- (void) setLeadingTrailingLSB:(int) aLeadingTrailingLSB;
- (int)  edgeDetection;
- (void) setEdgeDetection:(int) aEdgeDetection;
- (BOOL) enableTrigTimeSub;
- (void) setEnableTrigTimeSub:(BOOL) aEnableTrigTimeSub;
- (int)  rejectMargin;
- (void) setRejectMargin:(int) aRejectMargin;
- (int)  searchMargin;
- (void) setSearchMargin:(int) aSearchMargin;
- (short)windowOffset;
- (void) setWindowOffset:(short) aWindowOffset;
- (int)  windowWidth;
- (void) setWindowWidth:(int) aWindowWidth;
- (int)  acqMode;
- (void) setAcqMode:(int) aAcqMode;
- (int)  paramGroup;
- (void) setParamGroup:(int) aGroup;

#pragma mark ***Register - General routines
- (short)			getNumberRegisters;
- (uint32_t) 	getBufferOffset;
- (unsigned short) 	getDataBufferSize;
- (short)			getOutputBufferIndex;
- (uint32_t)	enabledMask:(int) n;
- (void)			setEnabledMask:(int)n withValue:(uint32_t)aMask;

#pragma mark ***HW Access
- (void) loadEnableMasks;
- (BOOL) writeMicroOp:(short) aCode;
- (void) writeMicroData:(short) data;
- (void) loadTriggerMatch;
- (void) loadWindowWidth;
- (void) loadWindowOffset;
- (void) loadSearchMargin;
- (void) loadRejectMargin;
- (void) loadEnableTrigTimeSub;
- (void) loadEdgeDetection;	
- (void) loadEdgeLSB;		
- (void) loadLeadingTimeWidthResolutions;
- (void) loadDeadTime;
- (void) loadDefaults;

#pragma mark ***Register - Register specific routines
- (NSString*) 		getRegisterName: (short) anIndex;
- (uint32_t) 	getAddressOffset: (short) anIndex;
- (short)			getAccessType: (short) anIndex;
- (short)			getAccessSize: (short) anIndex;
- (BOOL)			dataReset: (short) anIndex;
- (BOOL)			swReset: (short) anIndex;
- (BOOL)			hwReset: (short) anIndex;

#pragma mark ***Data Taker
- (void) runTaskStarted:(ORDataPacket*) aDataPacket userInfo:(NSDictionary*)userInfo;
- (void) takeData:(ORDataPacket*)aDataPacket userInfo:(NSDictionary*)userInfo;
- (void) runTaskStopped:(ORDataPacket*) aDataPacket userInfo:(NSDictionary*)userInfo;

#pragma mark •••Rates
- (uint32_t) getCounter:(int)counterTag forGroup:(int)groupTag;
- (BOOL) bumpRateFromDecodeStage:(short)channel;
- (uint32_t) tdcCount:(int)aChannel;
- (void) startRates;
- (void) clearTdcCounts;

#pragma mark ***Archival
- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;

#pragma mark •••HW Wizard
- (int) numberOfChannels;
- (NSArray*) wizardParameters;
- (NSNumber*) extractParam:(NSString*)param from:(NSDictionary*)fileHeader forChannel:(int)aChannel;
- (void) logThresholds;
- (NSMutableDictionary*) addParametersToDictionary:(NSMutableDictionary*)dictionary;
- (int) load_HW_Config_Structure:(SBC_crate_config*)configStruct index:(int)index;

@end


extern NSString* ORCaen1190DeadTimeChanged;
extern NSString* ORCaen1190LeadingWidthResolutionChanged;
extern NSString* ORCaen1190LeadingTimeResolutionChanged;
extern NSString* ORCaen1190LeadingTrailingLSBChanged;
extern NSString* ORCaen1190EdgeDetectionChanged;
extern NSString* ORCaen1190EnableTrigTimeSubChanged;
extern NSString* ORCaen1190RejectMarginChanged;
extern NSString* ORCaen1190SearchMarginChanged;
extern NSString* ORCaen1190WindowOffsetChanged;
extern NSString* ORCaen1190WindowWidthChanged;
extern NSString* ORCaen1190AcqModeChanged;
extern NSString* ORCaen1190ParamGroupChanged;
extern NSString* ORCaen1190EnabledChanged;
extern NSString* ORCaen1190RateGroupChangedNotification;

