//--------------------------------------------------------
// ORVXMModel
// Created by Mark  A. Howe on Fri Jul 22 2005
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2005 CENPA, University of Washington. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of
//Washington at the Center for Experimental Nuclear Physics and
//Astrophysics (CENPA) sponsored in part by the United States
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020.
//The University has certain rights in the program pursuant to
//the contract and the program should not be copied or distributed
//outside your organization.  The DOE and the University of
//Washington reserve all rights in the program. Neither the authors,
//University of Washington, or U.S. Government make any warranty,
//express or implied, or assume any liability or responsibility
//for the use of this software.
//-------------------------------------------------------------

#pragma mark ***Imported Files
#import "ORSerialPortWithQueueModel.h"

@class ORVXMMotor;
@class ORVXMMotorCmd;

#define kNumVXMMotors  4

#define kVXMCmdIdle				  0
#define kVXMCmdListExecuting	  1
#define kVXMImmediateCmdExecuting 2

@interface ORVXMModel : ORSerialPortWithQueueModel
{
@private
    NSMutableString* buffer;
    NSMutableArray*	motors;
    unsigned long	dataId;
    NSMutableArray* motorToQueryStack;
    NSMutableArray* cmdList;
    BOOL			displayRaw;
    int				syncWithRun;
    BOOL			repeatCmds;
    int				repeatCount;
    BOOL			stopRunWhenDone;
    int				cmdIndex;
    int				numTimesToRepeat;
    BOOL			abortAllRepeats;
    BOOL            shipRecords;
    NSString*       listFile;
    int				cmdTypeExecuting;
    NSString*		customCmd;
    BOOL			waiting;
    BOOL			useCmdQueue;
    BOOL			finalQueryInProgress;
    BOOL            doneFirstAction;
}

#pragma mark ***Initialization
- (void) dealloc;

#pragma mark ***Notifications
- (void) registerNotificationObservers;
- (void) dataReceived:(NSNotification*)note;

#pragma mark ***Accessors
- (BOOL) useCmdQueue;
- (void) setUseCmdQueue:(BOOL)aUseCmdQueue;
- (BOOL) waiting;
- (void) setWaiting:(BOOL)aWaiting;
- (NSString*) customCmd;
- (void) setCustomCmd:(NSString*)aCustomCmd;
- (int) cmdTypeExecuting;
- (void) setCmdTypeExecuting:(int)aCmdTypeExecuting;
- (void) saveListTo:(NSString*)aPath;
- (void) loadListFrom:(NSString*)aPath;
- (NSString*) listFile;
- (void) setListFile:(NSString*)aFileName;
- (BOOL) shipRecords;
- (void) setShipRecords:(BOOL)aShipRecords;
- (int) numTimesToRepeat;
- (void) setNumTimesToRepeat:(int)aNumTimesToRepeat;
- (int) cmdIndex;
- (void) setCmdIndex:(int)aCmdIndex;
- (BOOL) stopRunWhenDone;
- (void) setStopRunWhenDone:(BOOL)aStopRunWhenDone;
- (int) repeatCount;
- (void) setRepeatCount:(int)aRepeatCount;
- (BOOL) repeatCmds;
- (void) setRepeatCmds:(BOOL)aRepeatCmds;
- (int) syncWithRun;
- (void) setSyncWithRun:(int)aSyncWithRun;
- (BOOL) displayRaw;
- (void) setDisplayRaw:(BOOL)aDisplayRaw;
- (NSArray*) motors;
- (ORVXMMotor*) motor:(int)aMotor;
- (void) addItem:(id)anItem atIndex:(int)anIndex;
- (void) removeItemAtIndex:(int) anIndex;
- (BOOL) isMoving;

#pragma mark ***Data Records
- (void) appendDataDescription:(ORDataPacket*)aDataPacket userInfo:(id)userInfo;
- (NSDictionary*) dataRecordDescription;
- (unsigned long) dataId;
- (void) setDataId: (unsigned long) DataId;
- (void) setDataIds:(id)assigner;
- (void) syncDataIdsWith:(id)anotherVXM;
- (void) shipMotorState:(id)aMotor;

#pragma mark ***Motor Commands
- (void) manualStart;
- (void) removeAllCmds;

- (void) move:(int)motorIndex to:(float)aPosition speed:(int)aSpeed;
- (void) move:(int)motorIndex dx:(float)aPosition;
- (void) move:(int)motorIndex dx:(float)aPosition speed:(int)aSpeed;
- (void) stopAllMotion;
- (void) goToNexCommand;
- (void) addCmdFromTableFor:(int)aMotorIndex;
- (void) addZeroCmd;
- (void) goHome:(int)aMotorIndex plusDirection:(BOOL)yesOrNo;
- (void) addHomePlusCmdFor:(int)aMotorIndex;
- (void) addHomeMinusCmdFor:(int)aMotorIndex;
- (void) addCustomCmd;
- (void) sendGo;
- (void) sendMotorType:(int)motorIndex;
- (unsigned)  cmdQueueCount;
- (NSString*) cmdQueueCommand:(int)index;
- (NSString*) cmdQueueDescription:(int)index;
- (ORVXMMotorCmd*) motorCmd:(int)index;
- (void) forceMotorClear;

#pragma mark ***Archival
- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;
@end

extern NSString* ORVXMModelUseCmdQueueChanged;
extern NSString* ORVXMModelWaitingChanged;
extern NSString* ORVXMModelCustomCmdChanged;
extern NSString* ORVXMModelCmdTypeExecutingChanged;
extern NSString* ORVXMModelCmdFileChanged;
extern NSString* ORVXMModelShipRecordsChanged;
extern NSString* ORVXMModelNumTimesToRepeatChanged;
extern NSString* ORVXMModelCmdIndexChanged;
extern NSString* ORVXMModelStopRunWhenDoneChanged;
extern NSString* ORVXMModelRepeatCountChanged;
extern NSString* ORVXMModelRepeatCmdsChanged;
extern NSString* ORVXMModelSyncWithRunChanged;
extern NSString* ORVXMModelDisplayRawChanged;
extern NSString* ORVXMLock;
extern NSString* ORVXMModelCmdQueueChanged;
extern NSString* ORVXMModelListItemsAdded;
extern NSString* ORVXMModelListItemsRemoved;

@interface ORVXMMotorCmd : NSObject
{
	BOOL waitToSendNextCmd;
	NSString* cmd;
	NSString* description;
}

@property (nonatomic,assign) BOOL waitToSendNextCmd;
@property (nonatomic,retain) NSString* cmd;
@property (nonatomic,retain) NSString* description;
@end
