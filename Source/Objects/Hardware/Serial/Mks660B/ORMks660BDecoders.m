//
//  ORMks660BDecoders.m
//  Orca
//
// Created by Mark Howe on Wednesday, April 25, 2012
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2012 University of North Carolina. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of 
//North Carolina sponsored in part by the United States 
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020. 
//The University has certain rights in the program pursuant to 
//the contract and the program should not be copied or distributed 
//outside your organization.  The DOE and the University of 
//North Carolina reserve all rights in the program. Neither the authors,
//University of North Carolina, or U.S. Government make any warranty, 
//express or implied, or assume any liability or responsibility 
//for the use of this software.
//-------------------------------------------------------------


#import "ORMks660BDecoders.h"
#import "ORDataPacket.h"
#import "ORDataSet.h"

//------------------------------------------------------------------------------------------------
// Data Format
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx
// ^^^^ ^^^^ ^^^^ ^^------------------------data id
//                  ^^ ^^^^ ^^^^ ^^^^ ^^^^--length in longs
//
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx
//                          ^^^^ ^^^^ ^^^^--device id
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  pressure encoded as a float
// xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx  time pressure taken in seconds since Jan 1, 1970
//-----------------------------------------------------------------------------------------------
@implementation ORMks660BDecoderForPressure

- (unsigned long) decodeData:(void*)someData fromDecoder:(ORDecoder*)aDecoder intoDataSet:(ORDataSet*)aDataSet
{
	unsigned long *dataPtr = (unsigned long*)someData;
	union {
		float asFloat;
		unsigned long asLong;
	}thePressure;
	int ident = dataPtr[1] & 0xfff;
	thePressure.asLong = dataPtr[2];									//encoded as float, use union to convert
	[aDataSet loadTimeSeries:thePressure.asFloat										
						  atTime:dataPtr[3]
						  sender:self 
						withKeys:@"Mks660B",[NSString stringWithFormat:@"%d",ident],
								nil];
		
	
	return ExtractLength(dataPtr[0]);
}

- (NSString*) dataRecordDescription:(unsigned long*)dataPtr
{
    NSString* title= @"Mks660B Controller\n\n";
    NSString* theString =  [NSString stringWithFormat:@"%@\n",title];               
	int ident = dataPtr[1] & 0xfff;
	theString = [theString stringByAppendingFormat:@"Unit %d\n",ident];

    NSDate* date = [NSDate dateWithTimeIntervalSince1970:(NSTimeInterval)dataPtr[3]];
	
	union {
		float asFloat;
		unsigned long asLong;
	}theData;
    theData.asLong = dataPtr[2];
	
	
    theString = [theString stringByAppendingFormat:@"Gauge %d: %lu %@\n",ident,dataPtr[2],date];
	return theString;
}
@end


