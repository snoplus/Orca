//--------------------------------------------------------
// ORPacModel
// Created by Mark  A. Howe on Tue Jan 6, 2009
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2005 CENPA, University of Washington. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of
//Washington at the Center for Experimental Nuclear Physics and
//Astrophysics (CENPA) sponsored in part by the United States
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020.
//The University has certain rights in the program pursuant to
//the contract and the program should not be copied or distributed
//outside your organization.  The DOE and the University of
//Washington reserve all rights in the program. Neither the authors,
//University of Washington, or U.S. Government make any warranty,
//express or implied, or assume any liability or responsibility
//for the use of this software.
//-------------------------------------------------------------

#pragma mark •••Imported Files
#import "ORAdcProcessing.h"
#import "ORBitProcessing.h"
#import "ORSerialDeviceModel.h"

@class ORSerialPort;
@class ORTimeRate;
@class ORAlarm;
@class ORSafeQueue;

#define kPacShipAdcs	0xff

//Main Cmd Bytes
#define kPacADCmd		0x01    //--II.
#define kPacSelCmd		0x02	//--III.
#define kPacLcmEnaCmd	0x04	//-->IV.
#define kPacGainCmd		0x10	//-->V.
//followed by zero or more bytes

//Secondary Cmd Bytes
//II.
#define kPacSelectMask 0x07

//III.
//no further command byte

//IV.
#define kPacLcmEnaSet   0x01
#define kPacLcmEnaClr   0x02

//V.
#define kPacGainWriteAll		0x01 //write all with same value. 2 data words follow
#define kPacGainReadAll			0x02 //Read all
#define kPacGainWriteOneGain    0x10 //Write One RDAC.  Position follows (1 Byte) Value Follows (two bytes)
#define kPacGainReadOneGain		0x20 //Read One RDAC.   Position follows (1 Byte) Output of two bytes

#define kPacOkByte				0xf0
#define kPacErrorByte			0x0f

@interface ORPacModel : ORSerialDeviceModel <ORAdcProcessing,ORBitProcessing>
{
@private
    NSString*			portName;
    BOOL				portWasOpen;
    ORSerialPort*		serialPort;
    unsigned long		dataId;
    NSData*				lastRequest;
    ORSafeQueue*		cmdQueue;
    NSMutableString*    buffer;
    unsigned short		adc[8];
    unsigned long		timeMeasured[8];
    ORTimeRate*			timeRates[8];
    NSMutableData*		inComingData;
    int					module;
    int					preAmp;
    BOOL				lcmEnabled;
    int					gainChannel;
    int					gainValue;
    BOOL				setAllGains;
    int					gain[148];
    int					gainReadBack[148];
    BOOL				pollRunning;
    NSTimeInterval		pollingState;
    BOOL				logToFile;
    NSString*			logFile;
    NSMutableArray*		logBuffer;
    unsigned long		readCount;
    int					gainDisplayType;
    NSString*			lastGainFile;
    BOOL                readOnce;
    NSMutableArray*     processLimits;
    int                 gainIndex;
    NSMutableData*      gainBuffer;
    unsigned short      lcm;
    unsigned short      lcmTimeMeasured;
    int                 adcChannel;
    ORAlarm*            lcmEnabledAlarm;
    NSDate*             lastGainRead;
}

#pragma mark •••Initialization
- (id)   init;
- (void) dealloc;
- (void) registerNotificationObservers;
- (void) dataReceived:(NSNotification*)note;

#pragma mark •••Accessors
- (BOOL) vetoInPlace;
- (NSDate*) lastGainRead;
- (void) setLastGainRead:(NSDate*)aLastGainRead;
- (int) calculateAdcChannel;
- (int) calculateModule;
- (int) calculatePreamp;
- (int) adcChannel;
- (void) setAdcChannel:(int)aAdcChannel;
- (unsigned short) lcmTimeMeasured;
- (unsigned short) lcm;
- (void) setLcm:(unsigned short)aLc;
- (BOOL) isConnected;
- (BOOL) readingTemperatures;
- (NSString*) lastGainFile;
- (void) setLastGainFile:(NSString*)aLastGainFile;
- (int) gainDisplayType;
- (void) setGainDisplayType:(int)aGainDisplayType;
- (ORTimeRate*)timeRate:(int)index;
- (void) setPollingState:(NSTimeInterval)aState;
- (NSTimeInterval) pollingState;
- (int)  gain:(int)index;
- (void) setGain:(int)index withValue:(int)aValue;
- (int)  gainReadBack:(int)index;
- (void) setGainReadBack:(int)index withValue:(int)aValue;
- (BOOL) setAllGains;
- (void) setSetAllGains:(BOOL)aSetAllGains;
- (int) gainChannel;
- (void) setGainChannel:(int)aGainChannel;
- (BOOL) lcmEnabled;
- (void) setLcmEnabled:(BOOL)aLcmEnabled;
- (int) preAmp;
- (void) setPreAmp:(int)aPreAmp;
- (int) module;
- (void) setModule:(int)aModule;
- (int) gainValue;
- (void) setGainValue:(int)aGainValue;
- (ORSerialPort*) serialPort;
- (void) setSerialPort:(ORSerialPort*)aSerialPort;
- (BOOL) portWasOpen;
- (void) setPortWasOpen:(BOOL)aPortWasOpen;
- (NSString*) portName;
- (void) setPortName:(NSString*)aPortName;
- (NSData*) lastRequest;
- (void) setLastRequest:(NSData*)aRequest;
- (void) openPort:(BOOL)state;
- (unsigned short) adc:(int)index;
- (unsigned long) timeMeasured:(int)index;
- (void) setAdc:(int)index value:(unsigned short)aValue;
- (float) lcmVoltage;
- (float) adcVoltage:(int)index;
- (float) convertedLcm;
- (float) convertedAdc:(int)index;
- (NSString*) logFile;
- (void) setLogFile:(NSString*)aLogFile;
- (BOOL) logToFile;
- (void) setLogToFile:(BOOL)aLogToFile;
- (int) queCount;
- (void) setProcessLimitDefaults;

#pragma mark •••Data Records
- (void) appendDataDescription:(ORDataPacket*)aDataPacket userInfo:(id)userInfo;
- (NSDictionary*) dataRecordDescription;
- (unsigned long) dataId;
- (void) setDataId: (unsigned long) DataId;
- (void) setDataIds:(id)assigner;
- (void) syncDataIdsWith:(id)anotherPac;
- (void) writeGain;
- (void) readGain;
- (void) readAllGains;
- (void) selectModule;
- (void) writeLogBufferToFile;

#pragma mark •••Commands
- (void) writeCmdData:(NSData*)someData;
- (void) writeReadADC:(int)aChannel;
- (void) writeReadGain;
- (void) writeLcmEnable;
- (void) writeModuleSelect;
- (void) writeOneGain:(int)index;
- (void) writeReadAllGains;
- (void) writeGain:(int)aChannel value:(int)aValue;
- (void) writeShipCmd;
- (void) readAdcs;

- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;
- (void) serialPortWriteProgress:(NSDictionary *)dataDictionary;
- (void) readGainFile:(NSString*) aPath;
- (void) saveGainFile:(NSString*) aPath;
- (NSMutableArray*) processLimits;
- (NSString*)processName:(int)aChan;
- (NSString*)adcName:(int)aChan;

#pragma mark •••Adc Processing Protocol
- (void)processIsStarting;
- (void)processIsStopping;
- (void) startProcessCycle;
- (void) endProcessCycle;
- (BOOL) processValue:(int)channel;
- (void) setProcessOutput:(int)channel value:(int)value;
- (NSString*) processingTitle;
- (void) getAlarmRangeLow:(double*)theLowLimit high:(double*)theHighLimit  channel:(int)channel;
- (double) convertedValue:(int)channel;
- (double) maxValueForChan:(int)channel;
@end

@interface NSObject (ORHistModel)
- (void) removeFrom:(NSMutableArray*)anArray;
@end

extern NSString* ORPacModelLastGainReadChanged;
extern NSString* ORPacModelAdcChannelChanged;
extern NSString* ORPacModelLcmChanged;
extern NSString* ORPacModelProcessLimitsChanged;
extern NSString* ORPacModelGainDisplayTypeChanged;
extern NSString* ORPacModelSetAllGainsChanged;
extern NSString* ORPacModelGainChannelChanged;
extern NSString* ORPacModelLcmEnabledChanged;
extern NSString* ORPacModelPreAmpChanged;
extern NSString* ORPacModelModuleChanged;
extern NSString* ORPacModelGainValueChanged;
extern NSString* ORPacModelSerialPortChanged;
extern NSString* ORPacLock;
extern NSString* ORPacModelPortNameChanged;
extern NSString* ORPacModelPortStateChanged;
extern NSString* ORPacModelAdcChanged;
extern NSString* ORPacModelGainsChanged;
extern NSString* ORPacModelGainReadBacksChanged;
extern NSString* ORPacModelMultiPlotsChanged;
extern NSString* ORPacModelPollingStateChanged;
extern NSString* ORPacModelLogToFileChanged;
extern NSString* ORPacModelLogFileChanged;
extern NSString* ORPacModelQueCountChanged;
extern NSString* ORPacModelGainsReadBackChanged;
extern NSString* ORPacModelVetoChanged;

