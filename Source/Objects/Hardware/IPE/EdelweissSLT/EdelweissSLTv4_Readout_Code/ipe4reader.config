# config file for ipe4reader6.cpp, ver. 8
#
# first version: 2012-01-07
# update 2013-01-03 -tb-

# For multi FIFO reading the FIFO buffer is assigned in brackets, eg. numfifo(12): 15 means: buffer 12 reads FIFO 15
#   Update: currently we write all data to one FIFO, so always numfifo(0): 0
#   Update2 (2013-05): now we have a variable number of FIFOs! (1, 2, 4, 5 or 10 FIFOs)

#general settings
show_debug_info: 1  #1                    # Level of debug output: 0 = off, >0 = ON; 1 = a little bit, ... 3 = a lot of output, -1: special output for debugging (used for timestamp debugging the first time 2014-07-22)


#####################################
#          global   settings
#####################################

#
# Global Crate Settings
#

GLOBAL_UDP_SERVER_PORT: 9940         # port to receive KIT IPE crate commands (K commands)
GLOBAL_UDP_SERVER_IP_ADDR: 0.0.0.0   # default: 0.0.0.0 = any address (change it only if you want to receive commands only on dedicated IP)
#GLOBAL_UDP_SERVER_IP_ADDR: 192.168.1.105   # default: 0.0.0.0 = any address (change it only if you want to receive commands only on dedicated IP)
GLOBAL_UDP_CLIENT_PORT: 9940         # port where answers to read requests of KIT IPE crate commands (K commands) are sent to
run_main_readout_loop: 1              # 1 = yes (default), 0 = no, run only HW tests


#####################################
#          SLT and FIFO   settings
#####################################

#
# SLT settings
#
PixbusEnable: 0x1                     # pixbus enable register of SLT: 1 bit for each FLT to be read out, 20 bit; e.g.: 0x1= FLT#1 active; 0xfffff=all 20 FLTs active

#      IMPORTANT FOR PROPER BB OPERATION!    -------->
sltTimerSetting:         -1 #10737           # -2: leave running; -1: load with UTC time: >=0: init with given number as UTC time (=seconds since 1970...), use offset and correction
utcTimeOffset: 0          #1405677600      # define this as offset for the SLT timer (1405677600 is 2014-07-18 12:00 CEST resp. 10:00 UTC)
utcTimeCorrection100kHz: 0                 # should be 0, was used to fix SLT timer bug 2014-07-21



#
# SLT FIFO reader 0 settings (FIFO #1)
#
readfifo(0): 1                        # switches reading of this FIFO on (1) or off (0)
udp_server_port(0): 9941              # CEW_controle uses ALWAYS  port (994) to send commands!
udp_server_ip_addr(0):   0.0.0.0      #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
#udp_server_ip_addr(0):   192.168.1.102   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
send_status_udp_packet(0): 1             # 1 = yes, 0 = don't send (maybe useful for BBv1) (hidden feature: 0x1 = bit 0 = send IPE status; 0x2 = bit 1 = send OPERA status (legacy))
max_udp_size_config(0): -1             # (size in bytes) default: 1444; 0=default; -1=auto (720/numADCs)*numADCs*2+4 ; other values: take this size (including header)

#skip_num_status_bits(0): 1               # skip this number of status bits read from ADC chan #6 (default is 0)
#use_dummy_status_bits(0): 42              # default: 0=don't use default status (for BBv1 all bits will be 0);
                                      # for BBv1: set to ID of bolo box (then 'dummy status bits' will be used to satisfy cew_controle and value of flag is used as BB ID)

write2file(0): 0                         # always on
write2file_len_sec(0): 200                 # record how many seconds into file (in fact it counts the header words); 50 sec = ca. 280 MByte ASCII, 50 MByte binary
write2file_format(0): 1                  # 0 = ascii/text; 1 = binary file

#
# SLT FIFO reader 1 settings (FIFO #2)
#
readfifo(1): 0                       # switches reading of this FIFO on (1) or off (0)
udp_server_port(1): 9942              # CEW_controle uses ALWAYS this port (994) to send commands!
udp_server_ip_addr(1):   0.0.0.0   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
#udp_server_ip_addr(1):   192.168.1.102   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
send_status_udp_packet(1): 1             # 1 = yes, 0 = don't send (maybe useful for BBv1) (hidden feature: 0x1 = bit 0 = send IPE status; 0x2 = bit 1 = send OPERA status (legacy))
max_udp_size_config(1): -1             # (size in bytes) default: 1444; 0=default; -1=auto (720/numADCs)*numADCs*2+4 ; other values: take this size (including header)
skip_num_status_bits(1): 1               # skip this number of status bits read from ADC chan #6 (default is 0)

#
# SLT FIFO reader 2 settings (FIFO #3)
#
readfifo(2): 0                       # switches reading of this FIFO on (1) or off (0)
udp_server_port(2): 9943              # CEW_controle uses ALWAYS this port (994) to send commands!
udp_server_ip_addr(2):   0.0.0.0   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
#udp_server_ip_addr(2):   192.168.1.102   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
send_status_udp_packet(2): 1             # 1 = yes, 0 = don't send (maybe useful for BBv1) (hidden feature: 0x1 = bit 0 = send IPE status; 0x2 = bit 1 = send OPERA status (legacy))
max_udp_size_config(2): -1             # (size in bytes) default: 1444; 0=default; -1=auto (720/numADCs)*numADCs*2+4 ; other values: take this size (including header)

#
# SLT FIFO reader 3 settings (FIFO #4)
#
readfifo(3): 0                       # switches reading of this FIFO on (1) or off (0)
udp_server_port(3): 9944              # CEW_controle uses ALWAYS this port (994) to send commands!
udp_server_ip_addr(3):   0.0.0.0   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
#udp_server_ip_addr(3):   192.168.1.102   #  default "0.0.0.0" = accept any ...; udp_server_ip_addr and udp_server_ip is the same, the former is recommended
send_status_udp_packet(3): 1             # 1 = yes, 0 = don't send (maybe useful for BBv1) (hidden feature: 0x1 = bit 0 = send IPE status; 0x2 = bit 1 = send OPERA status (legacy))
max_udp_size_config(3): -1             # (size in bytes) default: 1444; 0=default; -1=auto (720/numADCs)*numADCs*2+4 ; other values: take this size (including header)



#
# SLT FIFO reader 17 settings
#

# test handling of not-present FIFOs
#readfifo(15): 1                       # switches reading of this FIFO on (1) or off (0)



#####################################
#          FLT   settings
#####################################

#
# FLT#1 (index 0) settings
#
FLTfiberEnable(0):           0x3f
FLTfiberBlockOutMask(0):     0x3f          #default is: all fiber outs blocking/off (FiberOutMask register)
FLTcontrolFiberInEnable(0):  0x0
FLTcontrolVetoFlag(0):       0x0           # veto flag of control register; set to 1 for veto cards, otherwise to 0
FLTBBversionMask(0):         0x0           #bitmask: BBv2/BBv1
FLTmode(0):                  0x1           #tpix,tramp,tord = 000: Normal; 001: TM-Order; 010: TM-Ramp; 11: Ordered-Ramp; 100: TM-PB
FLTfiberSet1(0):             0x00007500           # 0x3f    #delays
FLTfiberSet2(0):             0x0
#FLTstreamMask1(0):           0x3f3f3f3f    
FLTstreamMask1(0):           0x0000003f    
FLTstreamMask2(0):           0x00000000
FLTtriggerMask1(0):          0x00000011    
FLTtriggerMask2(0):          0x00000022
FLTsendBBstatusMask(0):      0x0000003f    #6 bit; each activated BB_Status FIFO will be read out and sent as UDP packet
FLTsendLegacyBBstatusMask(#1):      0x0000000    #6 bit; each activated BB_Status FIFO will be read out and send as LEGACY (OPERA style) UDP packet


#
# FLT#2 (index 1) settings
#
FLTfiberEnable(1):           0x1           # 6 bit bitmask of control register; enables according fiber as input
FLTcontrolFiberInEnable(1):  0x1
FLTcontrolVetoFlag(#2):      0x0           # veto flag of control register; set to 1 for veto cards, otherwise to 0
  # = FLTcontrolVetoFlag(3):      0x0           # veto flag of control register; set to 1 for veto cards, otherwise to 0
FLTBBversionMask(1):         0x0           #bitmask: BBv2/BBv1
FLTmode(1):                  0x0           #tpix,tramp,tord = 000: Normal; 001: TM-Order; 010: TM-Ramp; 100: TM-PB
FLTfiberSet1(1):             0x75           #      #delays
FLTfiberSet2(1):             0x0
FLTstreamMask1(1):           0x0000003f
FLTstreamMask2(1):           0x00000000
FLTtriggerMask1(1):          0x00000311    
FLTtriggerMask2(1):          0x00000322
FLTsendBBstatusMask(1):      0x0000003f    #6 bit; each activated BB_Status FIFO will be read out and send as UDP packet
FLTsendLegacyBBstatusMask(#2):      0x00000000    #6 bit; each activated BB_Status FIFO will be read out and send as LEGACY (OPERA style) UDP packet

#
# FLT#4 (index 3) settings
#
FLTfiberEnable(3):           0x1           # 6 bit bitmask of control register; enables according fiber as input
FLTcontrolFiberInEnable(3):  0x1
FLTcontrolVetoFlag(#4):      0x0           # veto flag of control register; set to 1 for veto cards, otherwise to 0
  # = FLTcontrolVetoFlag(3):      0x0           # veto flag of control register; set to 1 for veto cards, otherwise to 0
FLTBBversionMask(3):         0x0           #bitmask: BBv2/BBv1
FLTmode(3):                  0x0           #tpix,tramp,tord = 000: Normal; 001: TM-Order; 010: TM-Ramp; 100: TM-PB
FLTfiberSet1(3):             0x1           #      #delays
FLTfiberSet2(3):             0x0
FLTstreamMask1(3):           0x3f3f3f3f
FLTstreamMask2(3):           0x00000000
FLTtriggerMask1(3):          0x00000311    
FLTtriggerMask2(3):          0x00000322
FLTsendBBstatusMask(3):      0x0000003f    #6 bit; each activated BB_Status FIFO will be read out and send as UDP packet
FLTsendLegacyBBstatusMask(#4):      0x00000000    #6 bit; each activated BB_Status FIFO will be read out and send as LEGACY (OPERA style) UDP packet


#
# FLT#16 (index 15) settings
#
FLTfiberEnable(15):           0x0           # 6 bit bitmask of control register; enables according fiber as input
FLTcontrolVetoFlag(#16):      0x1           # veto flag of control register; set to 1 for veto cards, otherwise to 0
  # = FLTcontrolVetoFlag(15):      0x1           # veto flag of control register; set to 1 for veto cards, otherwise to 0
FLTstreamMask1(15):           0x0000003f
FLTstreamMask2(15):           0x00000000


