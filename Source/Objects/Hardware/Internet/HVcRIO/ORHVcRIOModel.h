//--------------------------------------------------------
// ORHVcRIOModel
// Created by Mark  A. Howe on Mon Jun 16, 2014
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2014, University of North Carolina. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of
//North Carolina sponsored in part by the United States
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020.
//The University has certain rights in the program pursuant to
//the contract and the program should not be copied or distributed
//outside your organization.  The DOE and the University of
//North Carolina reserve all rights in the program. Neither the authors,
//University of North Carolina, or U.S. Government make any warranty,
//express or implied, or assume any liability or responsibility
//for the use of this software.
//-------------------------------------------------------------

#pragma mark ‚Ä¢‚Ä¢‚Ä¢Imported Files
#import "ORAdcProcessing.h"
#import "ORBitProcessing.h"

@class ORTimeRate;
@class ORSafeQueue;
@class NetSocket;

@interface ORHVcRIOModel : OrcaObject <ORAdcProcessing,ORBitProcessing>
{
    @private
        //ip protocol
        NSString*           ipAddress;
        BOOL                isConnected;
        NetSocket*          socket;
        BOOL                wasConnected;
  
        unsigned long		dataId;
		NSString*			lastRequest;
		ORSafeQueue*		cmdQueue;
		NSMutableString*    buffer;
    
        //unsigned short		adc[8];
        double      		adc[8];//changed to double -tb-
		unsigned long		timeMeasured[8];
		ORTimeRate*			timeRates[8];
        int					gain[148];
        int					gainReadBack[148];
		BOOL				pollRunning;
		NSTimeInterval		pollingState;
		BOOL				logToFile;
		NSString*			logFile;
		NSMutableArray*		logBuffer;
		unsigned long		readCount;
		int					gainDisplayType;
		NSString*			lastGainFile;
        BOOL                readOnce;
        NSMutableArray*     processLimits;    
        int                 gainIndex;
        //unsigned short      lcm;
        double              lcm;//changed to double -tb-
        unsigned short      lcmTimeMeasured;
        NSDate*             lastGainRead;
        int                 workingOnGain;
        BOOL                setGainsResult;
        unsigned short      preAmpSelection;
        unsigned short      channelSelection;
        ORAlarm*            lcmEnabledAlarm;
        BOOL                lcmEnabled;
    
    
        //new for HVcRIO -tb-
        int                 numSetpoints;
        //use dictionary for later -tb-
        double setpoints[2000];
        double setpointsReadback[2000];
        double measuredValues[4000];
}

#pragma mark ‚Ä¢‚Ä¢‚Ä¢Initialization
- (void) dealloc;

#pragma mark ‚Ä¢‚Ä¢‚Ä¢Accessors
- (int) numSetpoints;
- (void) setNumSetpoints: (int) aValue;
- (NSString*) setpointItem: (int) aIndex;
- (NSString*) setpointData: (int) aIndex;
- (double) setpointValue: (int) aIndex;
- (void) setSetpoint: (int)aIndex withValue: (double)value   ;
- (double) setpointReadbackValue: (int) aIndex;
- (void) setSetpointReadback: (int)aIndex withValue: (double)value   ;

- (BOOL) lcmEnabled;
- (void) setLcmEnabled:(BOOL)aLcmEnabled;
- (BOOL) readingTemperatures;
- (unsigned short) channelSelection;
- (void) setChannelSelection:(unsigned short)aChannelSelection;
- (unsigned short) preAmpSelection;
- (void) setPreAmpSelection:(unsigned short)aPreAmpSelection;
- (BOOL) setGainsResult;
- (void) setSetGainsResult:(BOOL)aSetGainsResult;
- (int) workingOnGain;
- (void) setWorkingOnGain:(int)aWorkingOnGain;
- (NetSocket*) socket;
- (void) setSocket:(NetSocket*)aSocket;
- (NSString*) ipAddress;
- (void) setIpAddress:(NSString*)aIpAddress;
- (BOOL) isConnected;
- (void) setIsConnected:(BOOL)aFlag;
- (void) writeCmdString:(NSString*)aCommand;
- (void) parseString:(NSString*)theString;
- (void) connect;

- (NSString*) title;

- (NSDate*) lastGainRead;
- (void) setLastGainRead:(NSDate*)aLastGainRead;
- (unsigned short) lcmTimeMeasured;
- (double) lcm;
- (void) setLcm:(double)aLc;
- (NSString*) lastGainFile;
- (void) setLastGainFile:(NSString*)aLastGainFile;
- (int) gainDisplayType;
- (void) setGainDisplayType:(int)aGainDisplayType;
- (ORTimeRate*)timeRate:(int)index;
- (void) setPollingState:(NSTimeInterval)aState;
- (NSTimeInterval) pollingState;
- (int)  gain:(int)index;
- (void) setGain:(int)index withValue:(int)aValue;
- (int)  gainReadBack:(int)index;
- (void) setGainReadBack:(int)index withValue:(int)aValue;
- (NSString*) lastRequest;
- (void) setLastRequest:(NSString*)aRequest;
- (double) adc:(int)index;
- (unsigned long) timeMeasured:(int)index;
- (void) setAdc:(int)index value:(double)aValue;
- (float) lcmVoltage;
- (double) adcVoltage:(int)index;
- (float) convertedLcm;
- (double) convertedAdc:(int)index;
- (NSString*) logFile;
- (void) setLogFile:(NSString*)aLogFile;
- (BOOL) logToFile;
- (void) setLogToFile:(BOOL)aLogToFile;
- (int) queCount;
- (void) setProcessLimitDefaults;
- (void) flushQueue;
- (BOOL) vetoInPlace;

#pragma mark ‚Ä¢‚Ä¢‚Ä¢Data Records
- (void) appendDataDescription:(ORDataPacket*)aDataPacket userInfo:(id)userInfo;
- (NSDictionary*) dataRecordDescription;
- (unsigned long) dataId;
- (void) setDataId: (unsigned long) DataId;
- (void) setDataIds:(id)assigner;
- (void) syncDataIdsWith:(id)anotherHVcRIO;
- (void) writeLogBufferToFile;

#pragma mark ‚Ä¢‚Ä¢‚Ä¢Commands
- (void) getGains;
- (void) setGains;
- (void) writeSetpoints;
- (void) readBackSetpoints;
- (void) getTemperatures;
- (void) getCurrent;
- (void) writeShipCmd;
- (void) readAdcs;
- (void) readAllAdcs;
- (void) writeModuleSelect;

- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;
- (void) readGainFile:(NSString*) aPath;
- (void) saveGainFile:(NSString*) aPath;
- (NSMutableArray*) processLimits;
- (NSString*)processName:(int)aChan;
- (NSString*)adcName:(int)aChan;

#pragma mark ‚Ä¢‚Ä¢‚Ä¢Adc Processing Protocol
- (void)processIsStarting;
- (void)processIsStopping;
- (void) startProcessCycle;
- (void) endProcessCycle;
- (BOOL) processValue:(int)channel;
- (void) setProcessOutput:(int)channel value:(int)value;
- (NSString*) processingTitle;
- (void) getAlarmRangeLow:(double*)theLowLimit high:(double*)theHighLimit  channel:(int)channel;
- (double) convertedValue:(int)channel;
- (double) maxValueForChan:(int)channel;
@end

@interface NSObject (ORHistModel)
- (void) removeFrom:(NSMutableArray*)anArray;
@end

extern NSString* ORHVcRIOModelChannelSelectionChanged;
extern NSString* ORHVcRIOModelPreAmpSelectionChanged;
extern NSString* ORHVcRIOModelSetGainsResultChanged;
extern NSString* ORHVcRIOModelWorkingOnGainChanged;
extern NSString* ORHVcRIOModelLastGainReadChanged;
extern NSString* ORHVcRIOModelLcmChanged;
extern NSString* ORHVcRIOModelProcessLimitsChanged;
extern NSString* ORHVcRIOModelGainDisplayTypeChanged;
extern NSString* ORHVcRIOLock;
extern NSString* ORHVcRIOModelAdcChanged;
extern NSString* ORHVcRIOModelGainsChanged;
extern NSString* ORHVcRIOModelGainReadBacksChanged;
extern NSString* ORHVcRIOModelPollingStateChanged;
extern NSString* ORHVcRIOModelLogToFileChanged;
extern NSString* ORHVcRIOModelLogFileChanged;
extern NSString* ORHVcRIOModelQueCountChanged;
extern NSString* ORHVcRIOModelGainsReadBackChanged;
extern NSString* ORHVcRIOModelIsConnectedChanged;
extern NSString* ORHVcRIOModelIpAddressChanged;
extern NSString* ORHVcRIOModelLcmEnabledChanged;
extern NSString* ORHVcRIOModelVetoChanged;

